apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: opentelemetry-collector
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  source:
    repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
    targetRevision: 0.74.1
    chart: opentelemetry-collector
    helm:
      values: |
        mode: daemonset
        config:
          receivers:
            filelog:
              include:
                - /var/log/containers/*.log
              exclude:
                - /var/log/containers/otel-collector*.log
              start_at: beginning
              include_file_path: true
              include_file_name: false
              operators:
                - type: router
                  id: get-format
                  routes:
                    - output: parser-crio
                      expr: 'body matches "^[^ Z]+ "'
                # Parse CRI-O format
                - type: regex_parser
                  id: parser-crio
                  regex:
                    '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*)
                    ?(?P<log>.*)$'
                  output: extract_metadata_from_filepath
                  timestamp:
                    parse_from: attributes.time
                    layout_type: gotime
                    layout: '2006-01-02T15:04:05.999999999Z07:00'
                # Rename attributes
                - type: move
                  from: attributes.stream
                  to: attributes["log.iostream"]
                - type: move
                  from: attributes.container_name
                  to: resource["k8s.container.name"]
                - type: move
                  from: attributes.namespace
                  to: resource["k8s.namespace.name"]
                - type: move
                  from: attributes.pod_name
                  to: resource["k8s.pod.name"]
                - type: move
                  from: attributes.restart_count
                  to: resource["k8s.container.restart_count"]
                - type: move
                  from: attributes.uid
                  to: resource["k8s.pod.uid"]
          exporters:
            otlphttp/openobserve:
              endpoint: http://openobserve:5080
              headers:
                Authorization: ${env:AUTHORIZATION_HEADER}
                stream-name: shukawam
        extraEnvsFrom:
          - secretRef:
              name: opentelemetry-collector-secret
  project: management
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
