apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io # cascade deletion on this App deletion
spec:
  destination:
    namespace: monitoring
    server: "https://kubernetes.default.svc"
  source:
    repoURL: "https://prometheus-community.github.io/helm-charts"
    targetRevision: 67.11.0
    chart: kube-prometheus-stack
    helm:
      values: |
        prometheus:
          prometheusSpec:
            remoteWrite:
              - url: https://openobserve.shukawam.me/api/default/prometheus/api/v1/write
                basicAuth:
                  username:
                    name: openobserve-secret
                    key: root_user_email
                  password:
                    name: openobserve-secret
                    key: root_user_password
        grafana:
          defaultDashboardsEnabled: false
          defaultDashboardsTimezone: jst
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            hosts:
              - grafana.shukawam.me
            tls:
            - secretName: shukawam-tls-secret-grafana
              hosts:
              - grafana.shukawam.me
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Loki
                  type: loki
                  url: http://loki-stack:3100
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
                - name: default
                  orgId: 1
                  folder:
                  type: file
                  disableDeletion: false
                  allowUiUpdates: true
                  editable: false
                  options:
                    path: /var/lib/grafana/dashboards/default
                - name: private
                  orgId: 1
                  folder: private
                  type: file
                  disableDeletion: false
                  allowUiUpdates: true
                  editable: false
                  options:
                    path: /var/lib/grafana/dashboards/private
                - name: public
                  orgId: 1
                  folder: public
                  type: file
                  disableDeletion: false
                  allowUiUpdates: true
                  editable: false
                  options:
                    path: /var/lib/grafana/dashboards/public
          dashboards:
            private:
              gpu-capacity:
                url: https://raw.githubusercontent.com/shukawam/manifests/main/dashboards/grafana/gpu-capacity.json
                datasource: Prometheus
              loki-stack-monitoring:
                gnetId: 14055
                revision: 5
                datasource: Loki
              node-exporter-full:
                gnetId: 1860
                revision: 37
                datasource: Prometheus
              argocd:
                gnetId: 14584
                revision: 1
                datasource: Prometheus
              kube-state-metrics-v2:
                gnetId: 13332
                revision: 12
                datasource: Prometheus
              cert-manager:
                gnetId: 11001
                revision: 1
                datasource: Prometheus
          grafana.ini:
            server:
              root_url: https://grafana.shukawam.me
            auth.generic_oauth:
              enabled: true
              name: Keycloak
              allow_sign_up: true
              scopes: openid profile groups email
              auth_url: https://keycloak.shukawam.me/realms/shukawam/protocol/openid-connect/auth
              token_url: https://keycloak.shukawam.me/realms/shukawam/protocol/openid-connect/token
              api_url: https://keycloak.shukawam.me/realms/shukawam/protocol/openid-connect/userinfo
              role_attribute_path: contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'guest') && 'Editor' || 'Viewer'
          envValueFrom:
            GF_AUTH_GENERIC_OAUTH_CLIENT_ID:
              secretKeyRef:
                name: grafana-keycloak-secret
                key: client_id
            GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET:
              secretKeyRef:
                name: grafana-keycloak-secret
                key: client_secret
            GF_INSTALL_PLUGINS:
              secretKeyRef:
                name: grafana-plugin-secret
                key: plugins
  project: management
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
